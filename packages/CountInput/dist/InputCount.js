!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define("InputCount",[],t):"object"==typeof exports?exports.InputCount=t():e.InputCount=t()}(this,(function(){return(()=>{"use strict";var e={n:t=>{var r=t&&t.__esModule?()=>t.default:()=>t;return e.d(r,{a:r}),r},d:(t,r)=>{for(var n in r)e.o(r,n)&&!e.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:r[n]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};e.r(t),e.d(t,{default:()=>m}),require("antd/lib/input/style/css");const r=require("antd/lib/input");var n=e.n(r);const o=require("react");var a=e.n(o);const u=require("prop-types");var l=e.n(u),i=["inputType","maxLimit","onChange","defaultValue"];function c(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function p(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function f(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var r=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=r){var n,o,a=[],u=!0,l=!1;try{for(r=r.call(e);!(u=(n=r.next()).done)&&(a.push(n.value),!t||a.length!==t);u=!0);}catch(e){l=!0,o=e}finally{try{u||null==r.return||r.return()}finally{if(l)throw o}}return a}}(e,t)||function(e,t){if(e){if("string"==typeof e)return s(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?s(e,t):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function s(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}var y=n().TextArea,b=(0,o.forwardRef)((function(e,t){var r=e.inputType,u=e.maxLimit,l=e.onChange,s=e.defaultValue,b=function(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}(e,i),m=f((0,o.useState)(0),2),d=m[0],g=m[1],O=f((0,o.useState)(""),2),v=O[0],h=O[1];(0,o.useEffect)((function(){g(s?s.length:0),h(v)}),[s]);var j=function(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?c(Object(r),!0).forEach((function(t){p(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):c(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}({maxLength:u||null,suffix:u?a().createElement("span",null,a().createElement("span",{style:{opacity:"0.45"}},d),"/".concat(u)):null,onChange:function(e){!function(e){h(e.target.value),g(e.target.value.length),l(e.target.value)}(e)},defaultValue:s},b);return"textarea"===r?a().createElement("div",{style:{position:"relative"}},a().createElement(y,j),a().createElement("span",{style:{right:"10px",bottom:"5px",lineHeight:"20px",position:"absolute"}},a().createElement("span",{style:{opacity:"0.45"}},d),"/".concat(u))):a().createElement(a().Fragment,null,a().createElement(n(),j))}));b.defaultProps={inputType:"input",maxLimit:"",onChange:function(){},placeholder:""},b.propTypes={inputType:l().string,maxLimit:l().number,onChange:l().func,placeholder:l().string};const m=a().memo(b);return t})()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,